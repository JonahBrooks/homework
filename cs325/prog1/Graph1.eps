%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 7.13.0.564 (R2011b). Operating System: Linux 2.6.32-220.4.1.el6.x86_64 #1 SMP Thu Jan 19 14:50:54 EST 2012 x86_64.
%%Title: /nfs/stak/students/b/brookjon/homework/cs325/prog1/Graph1.eps
%%CreationDate: 01/29/2012  20:19:28
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    68   218   542   574
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    68   218   542   574
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0816 6888 csm

    0     0  5697  4269 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5698 4270 rf
6 w
0 1453 4415 0 0 -1453 741 1777 4 MP
PP
-4415 0 0 1453 4415 0 0 -1453 741 1777 5 MP stroke
4 w
DO
SO
6 w
0 sg
 741 1777 mt 5156 1777 L
 741  324 mt 5156  324 L
 741 1777 mt  741  324 L
5156 1777 mt 5156  324 L
 741 1777 mt 5156 1777 L
 741 1777 mt  741  324 L
 741 1777 mt  741 1732 L
 741  324 mt  741  368 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

 708 1922 mt 
(0) s
1182 1777 mt 1182 1732 L
1182  324 mt 1182  368 L
1149 1922 mt 
(2) s
1624 1777 mt 1624 1732 L
1624  324 mt 1624  368 L
1591 1922 mt 
(4) s
2065 1777 mt 2065 1732 L
2065  324 mt 2065  368 L
2032 1922 mt 
(6) s
2507 1777 mt 2507 1732 L
2507  324 mt 2507  368 L
2474 1922 mt 
(8) s
2948 1777 mt 2948 1732 L
2948  324 mt 2948  368 L
2882 1922 mt 
(10) s
3390 1777 mt 3390 1732 L
3390  324 mt 3390  368 L
3324 1922 mt 
(12) s
3831 1777 mt 3831 1732 L
3831  324 mt 3831  368 L
3765 1922 mt 
(14) s
4273 1777 mt 4273 1732 L
4273  324 mt 4273  368 L
4207 1922 mt 
(16) s
4714 1777 mt 4714 1732 L
4714  324 mt 4714  368 L
4648 1922 mt 
(18) s
5156 1777 mt 5156 1732 L
5156  324 mt 5156  368 L
5090 1922 mt 
(20) s
 741 1777 mt  785 1777 L
5156 1777 mt 5111 1777 L
 640 1821 mt 
(0) s
 741 1486 mt  785 1486 L
5156 1486 mt 5111 1486 L
 473 1530 mt 
(0.05) s
 741 1195 mt  785 1195 L
5156 1195 mt 5111 1195 L
 540 1239 mt 
(0.1) s
 741  905 mt  785  905 L
5156  905 mt 5111  905 L
 473  949 mt 
(0.15) s
 741  614 mt  785  614 L
5156  614 mt 5111  614 L
 540  658 mt 
(0.2) s
 741  324 mt  785  324 L
5156  324 mt 5111  324 L
 473  368 mt 
(0.25) s
 741 1777 mt 5156 1777 L
 741  324 mt 5156  324 L
 741 1777 mt  741  324 L
5156 1777 mt 5156  324 L
gs 741 324 4416 1454 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
221 0 221 0 221 0 220 0 221 0 221 0 221 0 220 0 
221 0 221 0 221 0 220 0 221 0 221 0 221 0 220 0 
221 0 221 0 221 0 220 0 741 1776 21 MP stroke
/c9 { 0.000000 0.500000 0.000000 sr} bdef
c9
221 0 221 0 221 0 220 0 221 0 221 0 221 0 220 0 
221 0 221 0 221 0 220 0 221 0 221 0 221 0 220 0 
221 0 221 0 221 0 220 0 741 1776 21 MP stroke
/c10 { 1.000000 0.000000 0.000000 sr} bdef
c10
221 -482 221 -297 221 -184 220 -114 221 -70 221 -44 221 -26 220 -17 
221 -10 221 -6 221 -4 220 -3 221 -1 221 -1 221 -1 220 0 
221 0 221 0 221 0 220 0 741 1776 21 MP stroke
gr

c10
0 sg
2681 2065 mt 
(Value of n) s
 391 1433 mt  -90 rotate
(Time taken \(s\)) s
90 rotate
1424  229 mt 
(Time to calculate the nth Fibonnaci Number \(all methods\)) s
 724 1820 mt 
( ) s
5140  366 mt 
( ) s
1 sg
0 578 1419 0 0 -578 881 1050 4 MP
PP
-1419 0 0 578 1419 0 0 -578 881 1050 5 MP stroke
4 w
DO
SO
6 w
0 sg
 881 1050 mt 2300 1050 L
 881  472 mt 2300  472 L
 881 1050 mt  881  472 L
2300 1050 mt 2300  472 L
 881 1050 mt 2300 1050 L
 881 1050 mt  881  472 L
 881 1050 mt 2300 1050 L
 881  472 mt 2300  472 L
 881 1050 mt  881  472 L
2300 1050 mt 2300  472 L
1349  625 mt 
(fib2 \(Iterative\)) s
gs 881 472 1420 579 rc
c8
360 0 953 582 2 MP stroke
gr

c8
0 sg
1349  804 mt 
(fib3 \(Stack\)) s
gs 881 472 1420 579 rc
c9
360 0 953 761 2 MP stroke
gr

c9
0 sg
1349  982 mt 
(fib1 \(Recursive\)) s
gs 881 472 1420 579 rc
c10
360 0 953 939 2 MP stroke
gr

c10
1 sg
0 1452 4415 0 0 -1452 741 3799 4 MP
PP
-4415 0 0 1452 4415 0 0 -1452 741 3799 5 MP stroke
4 w
DO
SO
6 w
0 sg
 741 3799 mt 5156 3799 L
 741 2347 mt 5156 2347 L
 741 3799 mt  741 2347 L
5156 3799 mt 5156 2347 L
 741 3799 mt 5156 3799 L
 741 3799 mt  741 2347 L
 741 3799 mt  741 3754 L
 741 2347 mt  741 2391 L
 708 3944 mt 
(0) s
1182 3799 mt 1182 3754 L
1182 2347 mt 1182 2391 L
1149 3944 mt 
(2) s
1624 3799 mt 1624 3754 L
1624 2347 mt 1624 2391 L
1591 3944 mt 
(4) s
2065 3799 mt 2065 3754 L
2065 2347 mt 2065 2391 L
2032 3944 mt 
(6) s
2507 3799 mt 2507 3754 L
2507 2347 mt 2507 2391 L
2474 3944 mt 
(8) s
2948 3799 mt 2948 3754 L
2948 2347 mt 2948 2391 L
2882 3944 mt 
(10) s
3390 3799 mt 3390 3754 L
3390 2347 mt 3390 2391 L
3324 3944 mt 
(12) s
3831 3799 mt 3831 3754 L
3831 2347 mt 3831 2391 L
3765 3944 mt 
(14) s
4273 3799 mt 4273 3754 L
4273 2347 mt 4273 2391 L
4207 3944 mt 
(16) s
4714 3799 mt 4714 3754 L
4714 2347 mt 4714 2391 L
4648 3944 mt 
(18) s
5156 3799 mt 5156 3754 L
5156 2347 mt 5156 2391 L
5090 3944 mt 
(20) s
 741 3799 mt  785 3799 L
5156 3799 mt 5111 3799 L
 640 3843 mt 
(2) s
 741 3315 mt  785 3315 L
5156 3315 mt 5111 3315 L
 640 3359 mt 
(4) s
 741 2831 mt  785 2831 L
5156 2831 mt 5111 2831 L
 640 2875 mt 
(6) s
 741 2347 mt  785 2347 L
5156 2347 mt 5111 2347 L
 640 2391 mt 
(8) s
 741 2293 mt 
(x 10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 80 FMSR

 967 2219 mt 
(-6) s
 741 3799 mt 5156 3799 L
 741 2347 mt 5156 2347 L
 741 3799 mt  741 2347 L
5156 3799 mt 5156 2347 L
gs 741 2347 4416 1453 rc
c8
221 -6 221 -8 221 -6 220 10 221 -56 221 -5 221 4 220 -27 
221 5 221 -12 221 -2 220 -5 221 -8 221 -9 221 7 220 -13 
221 -7 221 -24 221 -93 220 106 741 3543 21 MP stroke
c9
221 -51 221 -52 221 -54 220 -56 221 -32 221 -52 221 -55 220 -29 
221 -62 221 -46 221 -48 220 -40 221 -62 221 -45 221 -50 220 -52 
221 -69 221 -47 221 -51 220 -8 741 3503 21 MP stroke
gr

c9
0 sg
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

2681 4087 mt 
(Value of n) s
 558 3456 mt  -90 rotate
(Time taken \(s\)) s
90 rotate
1370 2252 mt 
(Only iterative full array \(blue\) and modulus \(green\) method\
s) s

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
