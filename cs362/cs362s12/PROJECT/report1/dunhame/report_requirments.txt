Sections:
1) The Tests
    * Structure of a test case
    * Length of test cases
    * Method for choosing inputs
    * Specification method used
    * How to handle segfaults/crashes
    * Development history of the test system
    * Areas particularly well tested, areas that have not been thoroughly tested
      – remaining risks of failure

2) The Testing Process
    * Communications with partners
    * Give some representative examples, show me what a bug report and response
      looked like
    * Revisions to tested code (and to tester)
    * Regression strategy, regression failures discovered
    * Quality of code on first testing
    * Quality of code when finished
    * Lines of code at beginning, when finished
    * Final status of all bugs reported so far (FIXED, WONTFIX, BOGUS…)

3) Future Plans
    * What would you have done differently, given time
    * How well did any tools you used work?
    * What infrastructure did you develop or did you need
    * How useful was automated testing vs. hand unit tests vs. code
      inspection, in your case?

- You report MUST contain statement coverage information of you code and your team members. Please include a table summarizing this information.
- Include all your dominion source code in your tester-code direcotry.
- Makefile MUST generate testdom, and the testdom must generate a file test.out. Notice that we delete all executables and object files in your directory before trying your Makefile.
- We ONLY try your "testdom" executable generated by gcc.
- We set 5 minutes timeout for the execution of your testdom program, do not use infinite/long loops in your tester.